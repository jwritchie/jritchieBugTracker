@model jritchieBugTracker.Models.CodeFirst.Ticket

@{
    ViewBag.Title = "Ticket Details";
}


<div class="container">

    <div class="row" style="margin-top:10px">
        <div class="col-sm-12">
            <div class="card-box table-responsive">

                <h4 class="header-title m-t-0 m-b-30">Ticket Details</h4>

                <dl class="dl-horizontal">
                    <dt>
                        Ticket Name
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Title)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Created)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Created)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Updated)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Updated)
                    </dd>

                    <dt>
                        Ticket Description
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Description)
                    </dd>

                    <dt>
                        Project Name
                        @*@Html.DisplayNameFor(model => model.Project.Title)*@
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Project.Title)
                    </dd>

                    <dt>
                        Priority
                        @*@Html.DisplayNameFor(model => model.TicketPriority.Name)*@
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.TicketPriority.Name)
                    </dd>

                    <dt>
                        Status
                        @*@Html.DisplayNameFor(model => model.TicketStatus.Name)*@
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.TicketStatus.Name)
                    </dd>

                    <dt>
                        Type
                        @*@Html.DisplayNameFor(model => model.TicketType.Name)*@
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.TicketType.Name)
                    </dd>

                    <dt>
                        Ticket Owner
                        @*@Html.DisplayNameFor(model => model.OwnerUser.Fullname)*@
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.OwnerUser.Fullname)
                    </dd>

                    <dt>
                        Assigned Developer
                        @*@Html.DisplayNameFor(model => model.AssignToUser.Fullname)*@
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.AssignToUser.Fullname)
                    </dd>
                </dl>




                <!-- Attachments -->
                <hr />
                <hr />
                <p style="color:red">Attachments here...</p>
                @*@if (Model.Attachments.Count != 0)
                    {
                        if (Model.Attachments.Count == 1)
                        {
                            <p style="color:#009999">@Model.Attachments.Count attachment.</p>
                        }
                        else
                        {
                            <p style="color:#009999">@Model.Attachments.Count attachments.</p>    }
                    }
                    else
                    {
                        <p style="color:#009999">No attachments.</p>
                    }*@


                <table id="datatable-responsive-attachments" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>
                                Date Added
                            </th>
                            <th>
                                File(s)
                            </th>
                            <th>
                                Description
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var file in Model.Attachments.OrderByDescending(a => a.Created))
                        {
                            <tr>
                                <td>
                                    @file.Created
                                </td>
                                <td>
                                    <a href="@file.FileUrl" target="_blank">@file.FileUrl</a>
                                </td>
                                <td>
                                    @file.Description
                                    @*@Html.ActionLink("Edit attachment", "Edit", "TicketAttachments", new { id = file.Id }, null )*@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>


                @*<div class="row">*@

                @*@{
                        foreach (var file in Model.Attachments.OrderByDescending(a => a.Created))
                        {
                            <div>
                                <a href="@file.FileUrl" target="_blank">@file.FileUrl</a>
                                <p style="margin-bottom:0px">@file.Description</p>
                            </div>
                            <br />
                        }
                    }*@

                @using (Html.BeginForm("Create", "TicketAttachments", new { TicketId = Model.Id }, FormMethod.Post, new { enctype = "Multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <p style="font-weight:bold">Upload attachment(s)</p>
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-2">New file(s)</label>
                            <div class="col-md-10">
                                <input name="attachment" type="file" class="form-control" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">File description</label>
                            <div class="col-md-10">
                                <textarea name="Description" class="form-control" style="max-width:none !important; width:100%"></textarea>
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                @*<input id="editor" class="form-control" name="Description" rows="1">*@
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <!-- Input/Button to submit the data. -->
                                <input type="submit" value="Create attachment" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
                @*</div>*@


                <!-- Comments -->
                <hr />
                <p style="color:red">Comments here...</p>
                @*@if (Model.Comments.Count != 0)
                    {
                        if (Model.Comments.Count == 1)
                        {
                            <p style="color:#009999">@Model.Comments.Count comment.</p>
                        }
                        else
                        {
                            <p style="color:#009999">@Model.Comments.Count comments.</p>
                        }
                    }
                    else
                    {
                        <p style="color:#009999">No Comments.</p>
                    }*@

                <div class="row">
                    @{
                        // Alternate background-color of Comments display.
                        bool commentFieldBlue = true;
                        foreach (var comment in Model.Comments.OrderByDescending(c => c.Id))
                        {
                            if (commentFieldBlue)   // Comment with Blue background.
                            {
                                <div style="padding:6px; background-color:rgba(30, 80, 150, 0.05); box-shadow:2px 2px 3px rgba(30,30,30,0.25)">
                                    <p style="font-size:smaller"><span style="font-weight:bold">Posted: </span>@comment.Created: &nbsp;<span style="font-weight:bold">@comment.Author.Fullname</span> said:</p>
                                    <p>@comment.Body</p>

                                    @{  // Display Comment-Update information if available.
                                        if (comment.Updated != null)
                                        {
                                            <div style="border:1px solid #009999; margin: 0px 10px 6px 10px; padding: 10px 10px 0px 10px">
                                                <p style="font-size:smaller"><span style="font-weight:bold">Edited: </span>@comment.Updated</p>
                                                @*<p style="font-size:smaller; margin-top:-18px"><span style="font-weight:bold">Reason: </span>@comment.UpdateReason</p>*@
                                            </div>
                                        }
                                    }

                                    @{  // Allow Editing/Deleting Comments.
                                        if (User.IsInRole("Admin") ||
                                           (User.IsInRole("ProjectManager") && !Model.Project.Users.Any(u => u.Id == ViewBag.UserId)) ||
                                           comment.AuthorId == ViewBag.UserId)
                                        {
                                            <div style="text-align:center">
                                                @Html.ActionLink("Edit Comment", "Edit", "TicketComments", new { id = comment.Id }, new { style = "color:rgb(30,80,150)" }) |
                                                @Html.ActionLink("Delete Comment", "Delete", "TicketComments", new { id = comment.Id }, new { style = "color:rgb(30,80,150)" })
                                            </div>
                                        }
                                    }
                                </div>
                                commentFieldBlue = false;
                            }
                            else                    // Comment with Green background.
                            {
                                <div style="padding:6px; background-color:rgba(0, 153, 153, 0.05); box-shadow:2px 2px 3px rgba(30,30,30,0.25)">
                                    <p style="font-size:smaller"><span style="font-weight:bold">Posted: </span>@comment.Created: &nbsp;<span style="font-weight:bold">@comment.Author.Fullname</span> said:</p>
                                    <p>@comment.Body</p>

                                    @{  // Display Comment-Update information if available.
                                        if (comment.Updated != null)
                                        //if (comment.Updated != null && comment.UpdateReason != null)
                                        {
                                            <div style="border:1px solid #009999; margin: 0px 10px 6px 10px; padding: 10px 10px 0px 10px">
                                                <p style="font-size:smaller"><span style="font-weight:bold">Edited: </span>@comment.Updated</p>
                                                @*<p style="font-size:smaller; margin-top:-18px"><span style="font-weight:bold">Reason: </span>@comment.UpdateReason</p>*@
                                            </div>
                                        }
                                    }

                                    @{  // Allow Editing/Deleting Comments.
                                        if (User.IsInRole("Admin") ||
                                            (User.IsInRole("ProjectManager") && !Model.Project.Users.Any(u => u.Id == ViewBag.UserId)) ||
                                            comment.AuthorId == ViewBag.UserId)
                                        {
                                            <div style="text-align:center">
                                                @Html.ActionLink("Edit Comment", "Edit", "TicketComments", new { id = comment.Id }, new { style = "color:rgb(30,80,150)" }) |
                                                @Html.ActionLink("Delete Comment", "Delete", "TicketComments", new { id = comment.Id }, new { style = "color:rgb(30,80,150)" })
                                            </div>
                                        }
                                    }
                                </div>
                                commentFieldBlue = true;
                            }
                            <hr class="blue-small" />
                        }
                    }


                    @{if (Request.IsAuthenticated)    // Confirm user is logged in before allowing Comment creation.
                        {
                            using (Html.BeginForm("Create", "TicketComments", new { TicketId = Model.Id }, FormMethod.Post, null))
                            {
                                @Html.AntiForgeryToken()
                                <div>
                                    <textarea rows="5" name="Body" style="max-width:none !important; width:100%">@ViewBag.Comment</textarea>
                                    @*<input name="Body" type="text" placeholder="Leave a Comment" value="@ViewBag.Comment" />*@
                                    <button class="btn btn-primary center-block" type="submit">Submit Comment</button>
                                </div>
                            }
                        }
                    }
                </div>


                <!-- Historical transactions -->
                <hr />
                <hr />
                <p style="color:red">Historical transactions here...</p>
                @*@if (Model.Histories.Count != 0)
                    {
                        if (Model.Histories.Count == 1)
                        {
                            <p style="color:#009999">@Model.Histories.Count transaction.</p>
                        }
                        else
                        {
                            <p style="color:#009999">@Model.Histories.Count transactions.</p>
                        }
                    }
                    else
                    {
                        <p style="color:#009999">No transactions.</p>
                    }*@

                <table id="datatable-responsive-histories" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>Created</th>
                            <th>Property</th>
                            <th>OldValue</th>
                            <th>NewValue</th>
                            <th>AuthorId</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var history in Model.Histories.OrderByDescending(h => h.Created))
                        {
                            <tr>
                                <td>
                                    @history.Created
                                </td>
                                <td>
                                    @history.Property
                                </td>
                                <td>
                                    @history.OldValue
                                </td>
                                <td>
                                    @history.NewValue
                                </td>
                                <td>
                                    @history.Author.Fullname
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>


            </div>
        </div>
    </div>
</div>



<p>
    @Html.ActionLink("Edit Ticket", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Return to Tickets", "Index")
</p>



@section scripts
{
    <!-- Datatables-->
    <script src="~/Assets/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Assets/plugins/datatables/dataTables.bootstrap.js"></script>
    <script src="~/Assets/plugins/datatables/dataTables.buttons.min.js"></script>
    <script src="~/Assets/plugins/datatables/buttons.bootstrap.min.js"></script>
    <script src="~/Assets/plugins/datatables/jszip.min.js"></script>
    <script src="~/Assets/plugins/datatables/pdfmake.min.js"></script>
    <script src="~/Assets/plugins/datatables/vfs_fonts.js"></script>
    <script src="~/Assets/plugins/datatables/buttons.html5.min.js"></script>
    <script src="~/Assets/plugins/datatables/buttons.print.min.js"></script>
    <script src="~/Assets/plugins/datatables/dataTables.fixedHeader.min.js"></script>
    <script src="~/Assets/plugins/datatables/dataTables.keyTable.min.js"></script>
    <script src="~/Assets/plugins/datatables/dataTables.responsive.min.js"></script>
    <script src="~/Assets/plugins/datatables/responsive.bootstrap.min.js"></script>
    <script src="~/Assets/plugins/datatables/dataTables.scroller.min.js"></script>

    <!-- Datatable init js -->
    <script src="~/Assets/pages/datatables.init.js"></script>



    <script type="text/javascript">
        $(document).ready(function () {
            $('#datatable').dataTable();
            $('#datatable-keytable').DataTable({ keys: true });
            $('#datatable-responsive-attachments').DataTable();
            $('#datatable-responsive-comments').DataTable();
            $('#datatable-responsive-histories').DataTable();
            $('#datatable-scroller').DataTable({ ajax: "~/Assets/plugins/datatables/json/scroller-demo.json", deferRender: true, scrollY: 380, scrollCollapse: true, scroller: true });
            var table = $('#datatable-fixed-header').DataTable({ fixedHeader: true });
        });
        TableManageButtons.init();
    </script>
}
